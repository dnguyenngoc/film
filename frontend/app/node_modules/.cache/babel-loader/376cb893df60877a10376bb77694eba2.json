{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ngoc0\\\\Desktop\\\\Project\\\\film\\\\frontend\\\\app\\\\src\\\\routes\\\\AppRoute.js\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Login from \"../components/views/Login\";\n\nfunction userIsLoggedIn() {\n  return false;\n}\n\nexport default function AppRouter({\n  path,\n  component,\n  auth\n}) {\n  return auth && !userIsLoggedIn() ? /*#__PURE__*/React.createElement(Route, {\n    path: path,\n    component: auth && !userIsLoggedIn() ? Login : component,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(Route, {\n    path: path,\n    component: auth && !userIsLoggedIn() ? Login : component,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/ngoc0/Desktop/Project/film/frontend/app/src/routes/AppRoute.js"],"names":["React","Route","Login","userIsLoggedIn","AppRouter","path","component","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,KAAP,MAAkB,2BAAlB;;AAEA,SAASC,cAAT,GAAyB;AACrB,SAAO,KAAP;AACH;;AAED,eAAe,SAASC,SAAT,CAAmB;AAACC,EAAAA,IAAD;AAAOC,EAAAA,SAAP;AAAkBC,EAAAA;AAAlB,CAAnB,EAA4C;AACvD,SACIA,IAAI,IAAI,CAACJ,cAAc,EAAvB,gBACE,oBAAC,KAAD;AACU,IAAA,IAAI,EAAEE,IADhB;AAEF,IAAA,SAAS,EAAGE,IAAI,IAAI,CAACJ,cAAc,EAAvB,GAA4BD,KAA5B,GAAoCI,SAF9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,gBAKE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAED,IADR;AAEE,IAAA,SAAS,EAAGE,IAAI,IAAI,CAACJ,cAAc,EAAvB,GAA4BD,KAA5B,GAAoCI,SAFlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANN;AAYH","sourcesContent":["import React from \"react\"\r\nimport { Route } from \"react-router-dom\"\r\n\r\nimport Login from \"../components/views/Login\";\r\n\r\nfunction userIsLoggedIn(){\r\n    return false\r\n}\r\n\r\nexport default function AppRouter({path, component, auth }){\r\n    return(\r\n        auth && !userIsLoggedIn() \r\n        ? <Route\r\n                    path={path}\r\n        component={ auth && !userIsLoggedIn() ? Login : component }   \r\n    /> \r\n        : <Route\r\n            path={path}\r\n            component={ auth && !userIsLoggedIn() ? Login : component }   \r\n    />\r\n        \r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}