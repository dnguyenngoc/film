{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ngoc0\\\\Desktop\\\\Project\\\\film\\\\frontend\\\\app\\\\src\\\\routes\\\\AppRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction userIsLoggedIn() {\n  return false;\n}\n\nexport default function AppRouter({\n  path,\n  component,\n  auth\n}) {\n  return auth && !userIsLoggedIn() ? /*#__PURE__*/React.createElement(Route, {\n    path: path,\n    render: () => /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 71\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 37\n    }\n  }) : /*#__PURE__*/React.createElement(Route, {\n    path: path,\n    component: component,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 101\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/ngoc0/Desktop/Project/film/frontend/app/src/routes/AppRoute.js"],"names":["React","Route","Redirect","userIsLoggedIn","AppRouter","path","component","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAEA,SAASC,cAAT,GAAyB;AACrB,SAAO,KAAP;AACH;;AAED,eAAe,SAASC,SAAT,CAAmB;AAACC,EAAAA,IAAD;AAAOC,EAAAA,SAAP;AAAkBC,EAAAA;AAAlB,CAAnB,EAA4C;AACvD,SACIA,IAAI,IAAI,CAACJ,cAAc,EAAvB,gBAA4B,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEE,IAAb;AAAmB,IAAA,MAAM,EAAE,mBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5B,gBAA4F,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEA,IAAb;AAAmB,IAAA,SAAS,EAAEC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhG;AAGH","sourcesContent":["import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\n\r\nfunction userIsLoggedIn(){\r\n    return false\r\n}\r\n\r\nexport default function AppRouter({path, component, auth }){\r\n    return(\r\n        auth && !userIsLoggedIn() ? <Route path={path} render={() => (<Redirect to=\"/login\"/>)}/> : <Route path={path} component={component} />\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}